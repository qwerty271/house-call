{"version":3,"sources":["Form/Form.js","App/App.js","reportWebVitals.js","index.js"],"names":["Form","React","useState","result","setResult","address","setAddress","transliterate","word","a","Ё","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","ё","й","ц","у","к","е","н","г","ш","щ","з","х","ъ","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","ф","ы","в","а","п","р","о","л","д","ж","э","Я","Ч","С","М","И","Т","Ь","Б","Ю","я","ч","с","м","и","т","ь","б","ю","split","map","char","join","className","initialValues","name","age","date","validate","values","errors","test","today","Date","getFullYear","getMonth","getDate","getTime","reverseDate","reverse","reverseDateMs","reviewDate","onSubmit","nameArray","totalName","forEach","substring","toLocaleUpperCase","data","country","region_iso_code","geo_lat","geo_lon","getAddress","touched","handleChange","handleBlur","handleSubmit","status","type","onChange","onBlur","value","token","count","hintText","selectOnBlur","inputProps","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28af7e03.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\nimport { Formik } from \"formik\";\r\nimport { AddressSuggestions } from \"react-dadata\";\r\nimport \"react-dadata/dist/react-dadata.css\";\r\n\r\nfunction Form() {\r\n  const [result, setResult] = React.useState(\"\");\r\n  const [address, setAddress] = React.useState({});\r\n\r\n  function transliterate(word) {\r\n    const a = {\r\n      Ё: \"YO\",\r\n      Й: \"I\",\r\n      Ц: \"TS\",\r\n      У: \"U\",\r\n      К: \"K\",\r\n      Е: \"E\",\r\n      Н: \"N\",\r\n      Г: \"G\",\r\n      Ш: \"SH\",\r\n      Щ: \"SCH\",\r\n      З: \"Z\",\r\n      Х: \"H\",\r\n      Ъ: \"'\",\r\n      ё: \"yo\",\r\n      й: \"i\",\r\n      ц: \"ts\",\r\n      у: \"u\",\r\n      к: \"k\",\r\n      е: \"e\",\r\n      н: \"n\",\r\n      г: \"g\",\r\n      ш: \"sh\",\r\n      щ: \"sch\",\r\n      з: \"z\",\r\n      х: \"h\",\r\n      ъ: \"'\",\r\n      Ф: \"F\",\r\n      Ы: \"I\",\r\n      В: \"V\",\r\n      А: \"a\",\r\n      П: \"P\",\r\n      Р: \"R\",\r\n      О: \"O\",\r\n      Л: \"L\",\r\n      Д: \"D\",\r\n      Ж: \"ZH\",\r\n      Э: \"E\",\r\n      ф: \"f\",\r\n      ы: \"i\",\r\n      в: \"v\",\r\n      а: \"a\",\r\n      п: \"p\",\r\n      р: \"r\",\r\n      о: \"o\",\r\n      л: \"l\",\r\n      д: \"d\",\r\n      ж: \"zh\",\r\n      э: \"e\",\r\n      Я: \"Ya\",\r\n      Ч: \"CH\",\r\n      С: \"S\",\r\n      М: \"M\",\r\n      И: \"I\",\r\n      Т: \"T\",\r\n      Ь: \"'\",\r\n      Б: \"B\",\r\n      Ю: \"YU\",\r\n      я: \"ya\",\r\n      ч: \"ch\",\r\n      с: \"s\",\r\n      м: \"m\",\r\n      и: \"i\",\r\n      т: \"t\",\r\n      ь: \"'\",\r\n      б: \"b\",\r\n      ю: \"yu\",\r\n    };\r\n    return word\r\n      .split(\"\")\r\n      .map(function (char) {\r\n        return a[char] || char;\r\n      })\r\n      .join(\"\");\r\n  }\r\n\r\n  function getAddress(name, date) {\r\n    const nameArray = name.split(\" \");\r\n    let totalName = \"\";\r\n\r\n    if (address) {\r\n      nameArray.forEach((word) => {\r\n        totalName += word.substring(0, 1).toLocaleUpperCase();\r\n      });\r\n      transliterate(totalName);\r\n      setResult(\r\n        address.data.country +\r\n          \"/\" +\r\n          address.data.region_iso_code +\r\n          \"/\" +\r\n          transliterate(totalName).toLocaleUpperCase() +\r\n          \"/GLAT\" +\r\n          (address.data.geo_lat ? address.data.geo_lat : \"\") +\r\n          \"-GLON\" +\r\n          (address.data.geo_lon ? address.data.geo_lon : \"\") +\r\n          \"/\" +\r\n          date\r\n      );\r\n    } else {\r\n      setResult(\"Ошибка\");\r\n    }\r\n  }\r\n\r\n  function reviewDate(date) {\r\n    const today = new Date(\r\n      new Date().getFullYear(),\r\n      new Date().getMonth() + 1,\r\n      new Date().getDate()\r\n    ).getTime();\r\n    const reverseDate = date.split(\".\").reverse();\r\n    const reverseDateMs = new Date(\r\n      reverseDate[0],\r\n      reverseDate[1],\r\n      reverseDate[2]\r\n    ).getTime();\r\n    if (reverseDateMs - today > 1209600000 || reverseDateMs - today < 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"form\">\r\n      <h2 className=\"form__title\">Запись к врачу</h2>\r\n\r\n      <Formik\r\n        initialValues={{ name: \"\", age: \"\", date: \"\" }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = \"Это обязательное поле\";\r\n          } else if (\r\n            !/^[А-ЯЁA-Z][а-яёa-z]*([-][А-ЯЁA-Z][а-яёa-z]*)?\\s[А-ЯЁA-Z][а-яёa-z]*\\s[А-ЯЁA-Z][а-яёa-z]*$/i.test(\r\n              values.name\r\n            )\r\n          ) {\r\n            errors.name = \"Неверно введены фио\";\r\n          }\r\n\r\n          if (!values.age) {\r\n            errors.age = \"Это обязательное поле\";\r\n          } else if (values.age > 150 || values.age < 0) {\r\n            errors.age = \"Допустимый возраст от 0 до 150\";\r\n          }\r\n\r\n          if (!values.date) {\r\n            errors.date = \"Это обязательное поле\";\r\n          } else if (\r\n            !/^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/.test(\r\n              values.date\r\n            )\r\n          ) {\r\n            errors.date = \"Введите дату в верном формате, например 01.01.2000\";\r\n          } else if (reviewDate(values.date)) {\r\n            errors.date = \"Нельзя указать дату позднее 14 дней с текущего дня\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values) => {\r\n          getAddress(values.name, values.date);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          status,\r\n        }) => (\r\n          <form className=\"fields\" onSubmit={handleSubmit}>\r\n            <p className=\"fields__title\">ФИО</p>\r\n            <input\r\n              className={`fields__input ${\r\n                errors.name && touched.name && errors.name\r\n                  ? \"fields__input-error\"\r\n                  : \"\"\r\n              }`}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.name}\r\n            ></input>\r\n            <span className=\"fields__span-error\">\r\n              {errors.name && touched.name && errors.name}\r\n            </span>\r\n            <p className=\"fields__title\">Возраст</p>\r\n            <input\r\n              className={`fields__input ${\r\n                errors.age && touched.age && errors.age\r\n                  ? \"fields__input-error\"\r\n                  : \"\"\r\n              }`}\r\n              type=\"number\"\r\n              name=\"age\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.age}\r\n            ></input>\r\n            <span className=\"fields__span-error\">\r\n              {errors.age && touched.age && errors.age}\r\n            </span>\r\n            <p className=\"fields__title\">Адрес</p>\r\n            <AddressSuggestions\r\n              token=\"ea73e6140b9125725640d3019f9f777cfd0d12a3\"\r\n              count=\"5\"\r\n              hintText=\"Выберите нужный адрес\"\r\n              selectOnBlur=\"true\"\r\n              value={address}\r\n              onChange={setAddress}\r\n              inputProps={{\r\n                className: \"fields__input\",\r\n              }}\r\n            />\r\n\r\n            <p className=\"fields__title\">Дата записи</p>\r\n            <input\r\n              className={`fields__input ${\r\n                errors.date && touched.date && errors.date\r\n                  ? \"fields__input-error\"\r\n                  : \"\"\r\n              }`}\r\n              type=\"text\"\r\n              name=\"date\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.date}\r\n            ></input>\r\n            <span className=\"fields__span-error\">\r\n              {errors.date && touched.date && errors.date\r\n                ? errors.date && touched.date && errors.date\r\n                : status\r\n                ? status\r\n                : \"\"}\r\n            </span>\r\n            <button\r\n              className={`fields__button  ${\r\n                (errors.name && touched.name && errors.name) ||\r\n                (errors.age && touched.age && errors.age) ||\r\n                (errors.date && touched.date && errors.date)\r\n                  ? \"fields__button_inactive\"\r\n                  : \"\"\r\n              } ${\r\n                touched.name && touched.age && touched.date\r\n                  ? \"\"\r\n                  : \"fields__button_inactive\"\r\n              }`}\r\n              type=\"submit\"\r\n              disabled={`${\r\n                (errors.name && touched.name && errors.name) ||\r\n                (errors.age && touched.age && errors.age) ||\r\n                (errors.date && touched.date && errors.date)\r\n                  ? \"disabled\"\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              Отправить\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <p className=\"result\">{result}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport Form from \"../Form/Form\";\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}